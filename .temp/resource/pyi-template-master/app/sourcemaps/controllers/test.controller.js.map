{"version":3,"sources":["controllers/test.controller.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,6BAIa;AACb,2DAAuD;AACvD,8CAA0C;AAC1C,6DAAkE;AAElE,6CAAqD;AAErD,MAAM,GAAG,GAAG,kBAAI,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;AACrC,MAAM,UAAU,GAAG;IACf,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE;IACxC,QAAQ,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE;CAC/C,CAAC;AAGF,IAAa,cAAc,sBAA3B,MAAa,cAAe,SAAQ,mBAAa;IAWtC,KAAK;QACR,gDAAgD;QAChD,OAAO,kBAAY,CAAC,KAAM,SAAQ,gBAAc;YAGrC,KAAK,CAAC,MAAM;gBACf,OAAO,MAAM,eAAe,CAAC;YACjC,CAAC;SACJ,CAAC,CAAC;IACP,CAAC;IAKM,KAAK;QACR,gDAAgD;QAChD,OAAO,kBAAY,CAAC,KAAM,SAAQ,gBAAc;YAGrC,KAAK,CAAC,MAAM;gBACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;gBAClB,IAAI,CAAC,MAAM,GAAG,gBAAgB,CAAC;gBAC/B,MAAM,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC;gBAC9B,OAAO,MAAM,eAAe,CAAC;YACjC,CAAC;SACJ,CAAC,CAAC;IACP,CAAC;IAMM,KAAK,CAAC,IAAI,CACN,QAAkB,EACV,IAAS,EAChB,IAAS;QAEjB,kDAAkD;QAClD,OAAO,MAAM,iBAAiB,CAAC;IACnC,CAAC;CACJ,CAAA;AAhDG;IADC,eAAS;8BACO,0BAAW;+CAAC;AAQ7B;IANC,oBAAc,CAAC;QACZ,MAAM,EAAE,GAAG;KACd,CAAC;IACD,qBAAO,CAAC,0BAAoB,CAAC,GAAG,EAAE,GAAG,CAAC;IACtC,qBAAO,CAAC,gBAAgB,CAAC;IACzB,GAAG;;;oCACY,kBAAO;2CAStB;AAKD;IAHC,oBAAc,CAAC;QACZ,MAAM,EAAE,QAAQ;KACnB,CAAC;;;oCACc,kBAAO;2CAYtB;AAMD;IAJC,oBAAc,CAAC;QACZ,MAAM,EAAE,OAAO;KAElB,CAAC;IAEG,WAAA,yBAAG,EAAE,CAAA;IACL,WAAA,iCAAW,EAAE,CAAA;IACb,WAAA,0BAAI,EAAE,CAAA;;;;0CAIV;AAlDQ,cAAc;IAD1B,gBAAU;GACE,cAAc,CAmD1B;AAnDY,wCAAc","file":"../../controllers/test.controller.js","sourcesContent":["import {\n    Controller, RequestMapping, RequestMappingMethod,\n    PYIController, autowired, PYIExecption,\n    PYIThrows\n} from 'pyi';\nimport { TestService } from '../services/test.service';\nimport { TestDto } from '../dto/test.dto';\nimport { Req, Res, QueryParams, Body } from 'routing-controllers';\nimport { Request, Response } from 'koa';\nimport { tags, request, summary } from 'pyi-swagger';\n\nconst tag = tags(['TestController']);\nconst userSchema = {\n    name: { type: 'string', required: true },\n    password: { type: 'string', required: true }\n};\n\n@Controller\nexport class TestController extends PYIController {\n\n    @autowired\n    public service!: TestService;\n\n    @RequestMapping({\n        prefix: '/'\n    })\n    @request(RequestMappingMethod.GET, '/')\n    @summary('test get index')\n    @tag\n    public index(): TestDto {\n        // tslint:disable-next-line:max-classes-per-file\n        return PYIExecption(class extends TestController implements PYIThrows {\n            public errno!: number;\n            public errmsg!: string;\n            public async throws() {\n                return await 'Hello PYI ...';\n            }\n        });\n    }\n\n    @RequestMapping({\n        prefix: '/error'\n    })\n    public error(): TestDto {\n        // tslint:disable-next-line:max-classes-per-file\n        return PYIExecption(class extends TestController implements PYIThrows {\n            public errno!: number;\n            public errmsg!: string;\n            public async throws() {\n                this.errno = 1000;\n                this.errmsg = 'test error ...';\n                throw new Error('test error');\n                return await 'Hello PYI ...';\n            }\n        });\n    }\n\n    @RequestMapping({\n        prefix: '/test',\n        // methods: [RequestMappingMethod.GET]\n    })\n    public async test(\n        @Res() response: Response,\n        @QueryParams() gets: any,\n        @Body() body: any\n    ) {\n        // console.log(await this.service.findAllUsers());\n        return await 'Hello World ...';\n    }\n}\n"]}